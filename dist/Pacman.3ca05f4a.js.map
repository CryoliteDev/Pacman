{"version":3,"sources":["setup.js","ghostMoves.js","node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","GameBoard.js","node_modules/@babel/runtime/helpers/defineProperty.js","Pacman.js","Ghosts.js","index.js"],"names":["GRID_SIZE","CELL_SIZE","DIRECTIONS","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","OBJECT_TYPE","BLANK","WALL","DOT","BLINKY","PINKY","INKY","CLYDE","PILL","PACMAN","GHOST","SCARED","GHOSTLAIR","CLASS_LIST","LEVEL","randomMovement","position","direction","objectExist","dir","nextMovePos","keys","Object","key","Math","floor","random","length","GameBoard","DOMGrid","dotCount","grid","gameWin","div","document","createElement","classList","add","innerHTML","appendChild","level","style","cssText","forEach","square","push","pos","classes","remove","object","contains","deg","transform","character","shouldMove","getNextMove","bind","makeMove","classesToRemove","classesToAdd","rotateDiv","removeObject","addObject","setNewPos","board","createGrid","Pacman","speed","startPos","e","keyCode","timer","powerPill","Ghost","name","isScared","gameGrid","querySelector","scoreTable","startButton","POWER_PILL_TIME","GLOBAL_SPEED","gameBoard","createGameBoard","score","powerPillActive","powerPillTimer","gameOver","pacman","removeEventListener","handleKeyInput","showGameStatus","clearInterval","checkCollision","ghosts","collidedGhost","find","ghost","gameLoop","moveCharacter","clearTimeout","setTimeout","startGame","addEventListener","setInterval"],"mappings":";AA+DO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,QAAA,WAAA,QAAA,YAAA,QAAA,WAAA,QAAA,UAAA,QAAA,eAAA,EA/DA,IAAMA,EAAY,GA+DlB,QAAA,UAAA,EA9DA,IAAMC,EAAY,GA8DlB,QAAA,UAAA,EAtDA,IAAMC,EAAa,CACxBC,UAAW,CACTC,KAAM,GACNC,UAAW,EACXC,SAAU,KAEZC,QAAS,CACPH,KAAM,GACNC,UAAWL,EACXM,SAAU,KAEZE,WAAY,CACVJ,KAAM,GACNC,SAAU,EACVC,SAAU,GAEZG,UAAW,CACTL,KAAM,GACNC,SAAUL,EACVM,SAAU,KAmCP,QAAA,WAAA,EA9BA,IAAMI,EAAc,CACzBC,MAAO,QACPC,KAAM,OACNC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,UAAW,QAkBN,QAAA,YAAA,EAdA,IAAMC,EAAa,CACxBb,EAAYC,MACZD,EAAYE,KACZF,EAAYG,IACZH,EAAYI,OACZJ,EAAYK,MACZL,EAAYM,KACZN,EAAYO,MACZP,EAAYQ,KACZR,EAAYS,OACZT,EAAYY,WAIP,QAAA,WAAA,EAAA,IAAME,EAAQ,CACnB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EA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","file":"Pacman.3ca05f4a.js","sourceRoot":"..","sourcesContent":["export const GRID_SIZE = 20; //columns \nexport const CELL_SIZE = 20; //rows\n\n/**\n * User input\n * Code - key code as to which key it is\n * Movement - which way the pacman goes\n * Rotation - which way the pacman faces\n */\nexport const DIRECTIONS = {\n  ArrowLeft: {\n    code: 37,\n    movement: -1,\n    rotation: 180\n  },\n  ArrowUp: {\n    code: 38,\n    movement: -GRID_SIZE,\n    rotation: 270\n  },\n  ArrowRight: {\n    code: 39,\n    movement: 1,\n    rotation: 0\n  },\n  ArrowDown: {\n    code: 40,\n    movement: GRID_SIZE,\n    rotation: 90\n  }\n};\n\n\nexport const OBJECT_TYPE = {\n  BLANK: 'blank',\n  WALL: 'wall',\n  DOT: 'dot',\n  BLINKY: 'blinky',\n  PINKY: 'pinky',\n  INKY: 'inky',\n  CLYDE: 'clyde',\n  PILL: 'pill',\n  PACMAN: 'pacman',\n  GHOST: 'ghost',\n  SCARED: 'scared',\n  GHOSTLAIR: 'lair'\n};\n\n// Lookup array for classes\nexport const CLASS_LIST = [\n  OBJECT_TYPE.BLANK,    // 0\n  OBJECT_TYPE.WALL,     // 1\n  OBJECT_TYPE.DOT,      // 2\n  OBJECT_TYPE.BLINKY,   // 3 \n  OBJECT_TYPE.PINKY,    // 4\n  OBJECT_TYPE.INKY,     // 5\n  OBJECT_TYPE.CLYDE,    // 6 \n  OBJECT_TYPE.PILL,     // 7\n  OBJECT_TYPE.PACMAN,   // 8 \n  OBJECT_TYPE.GHOSTLAIR // 9 \n];\n\n// map\nexport const LEVEL = [\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  1, 0, 0, 0, 2, 2, 2, 1, 9, 9, 9, 9, 1, 2, 2, 2, 0, 0, 0, 1, \n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  0, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n","import {DIRECTIONS, OBJECT_TYPE } from \"./setup\"\r\n\r\n// primitive random movement\r\nexport function randomMovement(position, direction, objectExist) {\r\n    let dir = direction;\r\n    let nextMovePos = position + dir.movement;\r\n\r\n    //an array from the directions object keys\r\n    const keys = Object.keys(DIRECTIONS); //grabs all keys and puts 'em in array\r\n\r\n    while(objectExist(nextMovePos, OBJECT_TYPE.WALL) || \r\n            objectExist(nextMovePos, OBJECT_TYPE.GHOST)) {\r\n            //gets random key from a the key array\r\n            const key =  keys[Math.floor(Math.random() * keys.length)];\r\n\r\n            //set the nxt move\r\n            dir = DIRECTIONS[key];\r\n            nextMovePos = position + dir.movement;\r\n    }\r\n    return { nextMovePos, direction: dir};\r\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","import {GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from \"./setup\"\r\n\r\nclass GameBoard {\r\n    constructor(DOMGrid) {\r\n        this.dotCount = 0;\r\n        this.grid = [];\r\n        this.DOMGrid = DOMGrid;\r\n    }\r\n\r\n    /**\r\n     * Displays if the game is over or\r\n     * Displays if the game is won\r\n     */\r\n    showGameStatus(gameWin) {\r\n        const div = document.createElement(\"div\");\r\n        div.classList.add(\"game-status\");\r\n        div.innerHTML = `${gameWin ? \"WIN\" : \"GAME OVER\"}`;\r\n        this.DOMGrid.appendChild(div);\r\n    }\r\n\r\n    createGrid(level) {\r\n        this.dotCount = 0;\r\n        this.grid = [];\r\n        this.DOMGrid.innerHTML = \"\";\r\n        this.DOMGrid.style.cssText = `grid-template-columns: repeat(${GRID_SIZE}, ${CELL_SIZE}px);`;\r\n\r\n        //creates the map\r\n        level.forEach((square) => {\r\n            const div = document.createElement(\"div\");\r\n            div.classList.add(\"square\", CLASS_LIST[square]);\r\n            div.style.cssText = `width: ${CELL_SIZE}px; height: ${CELL_SIZE}px;`;\r\n            this.DOMGrid.appendChild(div);\r\n            this.grid.push(div);\r\n\r\n            if (CLASS_LIST[square] === OBJECT_TYPE.DOT) {\r\n                this.dotCount++;\r\n            }\r\n        });\r\n    }\r\n\r\n    addObject(pos, classes) {\r\n        this.grid[pos].classList.add(...classes);\r\n\r\n    }\r\n\r\n    removeObject(pos, classes) {\r\n        this.grid[pos].classList.remove(...classes);\r\n        \r\n    }\r\n\r\n    objectExist(pos, object) {\r\n        return this.grid[pos].classList.contains(object);\r\n    }\r\n\r\n    rotateDiv(pos, deg) {\r\n        this.grid[pos].style.transform = `rotate(${deg}deg)`;\r\n    }\r\n\r\n    /**\r\n     * moves pacman and ghost\r\n     */\r\n    moveCharacter(character){\r\n        if (character.shouldMove()) {\r\n            const {nextMovePos, direction} = character.getNextMove(\r\n                this.objectExist.bind(this)\r\n            );\r\n            const {classesToRemove, classesToAdd} = character.makeMove();\r\n\r\n            if (character.rotation && nextMovePos !== character.pos) {\r\n                this.rotateDiv(nextMovePos,character.dir.rotation); // rotation from (setup.js)\r\n                this.rotateDiv(character.pos, 0);\r\n            }\r\n\r\n            this.removeObject(character.pos, classesToRemove);\r\n            this.addObject(nextMovePos, classesToAdd);\r\n\r\n            character.setNewPos(nextMovePos, direction);\r\n        }\r\n    }\r\n\r\n    static createGameBoard(DOMGrid, level) {\r\n        const board = new this(DOMGrid);\r\n        board.createGrid(level);\r\n        return board;\r\n    }\r\n}\r\n\r\nexport default GameBoard;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import { OBJECT_TYPE, DIRECTIONS } from \"./setup\"\r\n\r\nclass Pacman {\r\n    constructor(speed, startPos) {\r\n        this.pos = startPos;\r\n        this.speed = speed;\r\n        this.dir = null;\r\n        this.timer = 0;\r\n        this.powerPill = false;\r\n        this.rotation = true;\r\n    }\r\n\r\n    /**\r\n     * Check if pacman is ready to move or not\r\n     */\r\n    shouldMove() {\r\n        if (!this.dir) { // shouldn't move initially \r\n            return;\r\n        }\r\n\r\n        if (this.timer === this.speed) { \r\n            this.timer = 0;\r\n            return true;\r\n        }\r\n        this.timer++;\r\n    }\r\n\r\n    /**\r\n     * Calculate the nxt move for pacman\r\n     * @param {*} objectExist \r\n     */\r\n    getNextMove(objectExist) {\r\n        let nextMovePos = this.pos + this.dir.movement; // movement from the key (setup.js)\r\n\r\n        if (objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\r\n            objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)) {\r\n            \r\n                nextMovePos = this.pos;\r\n        }\r\n\r\n        return{ nextMovePos, direction: this.dir };\r\n    }\r\n\r\n    makeMove() {\r\n        const classesToRemove = [OBJECT_TYPE.PACMAN];\r\n        const classesToAdd = [OBJECT_TYPE.PACMAN];\r\n\r\n        return { classesToRemove, classesToAdd }\r\n    }\r\n\r\n    setNewPos(nextMovePos) {\r\n        this.pos = nextMovePos;\r\n    }\r\n\r\n    handleKeyInput = (e, objectExist) => {\r\n        let dir;\r\n\r\n        // console.log(e);\r\n\r\n        if (e.keyCode >= 37 && e.keyCode <=40) {\r\n            dir = DIRECTIONS[e.key];\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        const nextMovePos = this.pos + dir.movement;\r\n        if (objectExist(nextMovePos, OBJECT_TYPE.WALL)) {\r\n            return;\r\n        }\r\n\r\n        this.dir = dir;\r\n    };\r\n}\r\n\r\nexport default Pacman;","import { DIRECTIONS, OBJECT_TYPE} from \"./setup\"\r\n\r\nclass Ghost {\r\n    constructor(speed = 5, startPos, movement, name) {\r\n        this.name = name;\r\n        this.movement = movement;\r\n        this.startPos = startPos;\r\n        this.pos = startPos;\r\n        this.dir = DIRECTIONS.ArrowRight;\r\n        this.speed = speed;\r\n        this.timer = 0;\r\n        this.isScared = false;\r\n        this.rotation = false;\r\n    }\r\n\r\n    shouldMove() {\r\n        if (this.timer === this.speed) {\r\n            this.timer = 0;\r\n            return true;\r\n        }\r\n\r\n        this.timer++;\r\n        // return false;\r\n    }\r\n\r\n    getNextMove(objectExist) {\r\n        const { nextMovePos, direction} = this.movement(\r\n            this.pos, \r\n            this.dir,\r\n            objectExist\r\n        );\r\n        return { nextMovePos, direction};\r\n    }\r\n\r\n    makeMove() {\r\n        const classesToRemove = [OBJECT_TYPE.GHOST, OBJECT_TYPE.SCARED, this.name];\r\n        let classesToAdd = [OBJECT_TYPE.GHOST, this.name];\r\n\r\n        if (this.isScared) {\r\n            classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\r\n        }\r\n        return {classesToRemove, classesToAdd};\r\n    }\r\n\r\n    setNewPos(nextMovePos, direction) {\r\n        this.pos = nextMovePos;\r\n        this.dir = direction;\r\n    }\r\n}\r\n\r\nexport default Ghost;","import { LEVEL, OBJECT_TYPE } from './setup';\nimport { randomMovement } from \"./ghostMoves\";\n\n// Classes\nimport GameBoard from \"./GameBoard\"; \nimport Pacman from \"./Pacman\";\nimport Ghost from \"./Ghosts\";\n\n// DOM Elements\nconst gameGrid = document.querySelector(\"#game\");\nconst scoreTable = document.querySelector(\"#score\");\nconst startButton = document.querySelector(\"#start-button\");\n\n// Game constants \nconst POWER_PILL_TIME = 10000; // MILLISECONDS\nconst GLOBAL_SPEED = 80; //MILISECONDS (for game loop)\nconst gameBoard = GameBoard.createGameBoard(gameGrid, LEVEL);\n\n// initial setup\nlet score = 0;\nlet timer = null;\nlet gameWin = false;\nlet powerPillActive = false;\nlet powerPillTimer = null;\n\n\nfunction gameOver(pacman, grid) {\n    document.removeEventListener(\"keydown\", (e) => \n        pacman.handleKeyInput(e, gameBoard.objectExist.bind(gameBoard))\n    );\n\n    gameBoard.showGameStatus(gameWin);\n    clearInterval(timer);\n    \n    startButton.classList.remove(\"hide\");\n}\n/**\n * Checks if the pacman and the ghost \n * have come in to contact or not\n */\nfunction checkCollision(pacman, ghosts) {\n    const collidedGhost = ghosts.find((ghost) => pacman.pos === ghost.pos);\n\n    if (collidedGhost) {\n        if(pacman.powerPill) {\n            gameBoard.removeObject(collidedGhost.pos, [\n                OBJECT_TYPE.GHOST,\n                OBJECT_TYPE.SCARED,\n                collidedGhost.name\n            ]);\n\n            collidedGhost.pos = collidedGhost.startPos;\n            score += 100;\n        } else {\n            gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\n            gameBoard.rotateDiv(pacman.pos, 0);\n            gameOver(pacman, gameGrid);\n        }\n    }\n}\n\nfunction gameLoop(pacman, ghosts) {\n    // console.log(\"testing game loop\");\n    gameBoard.moveCharacter(pacman);\n    checkCollision(pacman, ghosts);\n\n    ghosts.forEach((ghost) => gameBoard.moveCharacter(ghost));\n    checkCollision(pacman, ghosts);\n\n    // if pacman eats a dot\n    if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.DOT)) {\n        gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.DOT]);\n        gameBoard.dotCount--;\n        score += 10;\n    }\n\n    //if pacmman eats powerpill\n    if(gameBoard.objectExist(pacman.pos, OBJECT_TYPE.PILL)) {\n        gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PILL]);\n        pacman.powerPill = true;\n        score += 50;\n\n        clearTimeout(powerPillTimer);\n        powerPillTimer = setTimeout( \n            () => (pacman.powerPill = false), POWER_PILL_TIME);\n    }\n\n    //change ghost scare mode \n    if (pacman.powerPill !== powerPillActive) {\n        powerPillActive = pacman.powerPill;\n        ghosts.forEach((ghost) => (ghost.isScared = pacman.powerPill)); \n    }\n\n    //if all dots are eaten\n    if(gameBoard.dotCount === 0) {\n        gameWin = true;\n        gameOver(pacman, gameGrid);\n    }\n\n    scoreTable.innerHTML = score;\n}\n\nfunction startGame() {\n\n    gameWin = false;\n    powerPillActive = false;\n    score = 0;\n\n    startButton.classList.add(\"hide\");\n    gameBoard.createGrid(LEVEL);\n\n    const pacman = new Pacman(2, 287);\n    gameBoard.addObject(287, [OBJECT_TYPE.PACMAN]);\n\n    document.addEventListener(\"keydown\", (e) => \n        pacman.handleKeyInput(e, gameBoard.objectExist.bind(gameBoard))\n    );\n\n    const ghosts = [\n        new Ghost(5, 188, randomMovement, OBJECT_TYPE.BLINKY),\n        new Ghost(4, 209, randomMovement, OBJECT_TYPE.PINKY),\n        new Ghost(3, 230, randomMovement, OBJECT_TYPE.INKY),\n        new Ghost(2, 251, randomMovement, OBJECT_TYPE.CLYDE)\n    ]\n\n    timer = setInterval(() => gameLoop(pacman, ghosts), GLOBAL_SPEED);\n}\n\n// Initialize game\nstartButton.addEventListener(\"click\", startGame);"]}